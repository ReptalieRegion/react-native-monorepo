# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  def updateVersion(options)
    if options[:version]
      version = options[:version]
    else
      version = prompt(text: "Enter the version type or specific version\n(major, minor, patch or 1.0.0): ")
    end

    re = /\d+.\d+.\d+/
    versionNum = version[re, 0]

    if (versionNum)
      increment_version_number(
        version_number: versionNum
      )
    elsif (version == 'major' || version == 'minor' || version == 'patch')
      increment_version_number(
        bump_type: version
      )
    else
      UI.user_error!("[ERROR] Wrong version!!!!!!")
    end
  end

  desc "iOS version up"
  lane :versionup do |options|
    xcodeproj = ENV["XCODEPROJ"]
    increment_build_number(xcodeproj: xcodeproj)
    increment_version_number_in_plist(
      target: 'crawl',
      xcodeproj: xcodeproj, 
      bump_type: 'patch'
    )
    increment_version_number_in_plist(
      target: 'crawlTests',
      xcodeproj: xcodeproj, 
      bump_type: 'patch'
    )
  end


  desc "Push a new release build to TestFlight"
  lane :release do |options|
    # 인증
    match(
      git_url: ENV["GIT_URL"],
      storage_mode: ENV["STORAGE_MODE"],
      type: "appstore",
      app_identifier: [ENV["APP_IDENTIFIER"], ENV["NOTIFEE_IDENTIFIER"]],
      readonly: true
    )

    # Cache 삭제
    clear_derived_data

    # 버전
    updateVersion(options)
    increment_build_number(xcodeproj: ENV["XCODEPROJ"])

    # 빌드
    build_app(workspace: ENV["WORKSPACE"], scheme: ENV["PROD_SCHEME"])

    # 배포
    upload_to_testflight(skip_waiting_for_build_processing: true)
  end

  desc "Push a new development build to TestFlight"
  lane :development do |options|
    # 인증
    match(
      git_url: ENV["GIT_URL"],
      storage_mode: ENV["STORAGE_MODE"],
      type: "appstore",
      app_identifier: [ENV["APP_IDENTIFIER_DEV"], ENV["NOTIFEE_IDENTIFIER_DEV"]],
      readonly: true
    )

    # Cache 삭제
    clear_derived_data

    # 버전
    updateVersion(options)
    increment_build_number(xcodeproj: ENV["XCODEPROJ"])

    # 빌드
    build_app(workspace: ENV["WORKSPACE"], scheme: ENV["DEV_SCHEME"])

    # 배포
    upload_to_testflight(skip_waiting_for_build_processing: true)
  end
end
